#include <iostream>
#include <fstream>
using namespace std;

//double 제어
int main(){
  double a = 12.3456789;
  cout << a << endl; //출력: 12.3456789
  cout.width(15); //setw(15)와 동일 ; 15칸 띄우고 오른쪽 정렬
  cout.precision(4); //표현할 수 있는 숫자 개수를 제한
  cout.fill('-'); //공백을 입력 문자로 채움
  cout << a << endl; //출력: ---------------12.34
  return 0;
}
//char 제어
int main() {
  char ch;
  cin.unsetf(ios::skipws); //공백 스킵하는것을 끄겠다. -> 이제 공백도 문자로 취급하겠다.
  cin >> ch; //입력: Merry Christmas
  cout << '(' << ch << ')' << endl; //출력: Merry Christmas
  cin.setf(ios::skipws); //스킵 기능을 다시 키겠다.
  cin >> ch; //입력: Merry (Christmas) : 괄호 안은 입력 못함 spacebar에서 문자입력 완료처리 해버림
  cout << '(' << ch << ')' << endl; //출력: Merry
  return 0;
}
--------------------------------------------------------------------------------------------------------
bool readStu(ifsream& fin, int& id, int& score1, int& score2, int& score3) {
  fin >> id >> score1 >> score2 >> score3;
  if(!fin)
    return false;
  else
    return ture;
}
void calGrade(int score1, int score2, int score3, int& avg, char& grade) {
  avg = (score1 + score2 + score3) / 3;
  if(avg >= 90)
    grade = 'A';
  else if(avg >= 80)
    grade = 'B';
  else if(avg >= 70)
    grade = 'C';
  else if(avg >= 60)
    grade = 'D';
  else
    grade = 'F';
}
void writeStu(ofstream& fout, int id, int avg, char grade){
  fout.width(4);
  fout.fill('0');
  fout << id;
  
  fout.width(3);
  fout.fill(' ');
  fout << avg;
  
  fout.width(2);
  fout.fill(' ');
  fout << grade << endl;
}

int main() {
  //각각 line 별로 수행
    //1) ch&STUFL.DAT 파일로부터 1줄씩 읽는다.
    //2) sc1, sc2, sc3를 평균내고 평균값(avg)로 grade를 결정한다.
    //3) grade.txt에 id, avg, grade를 저장한다.
  ifstream fin("ch&STUFL.DAT");
  ofstream fout("grade.txt");
  int id, score1, score2, score3, avg;
  char grade;
  
  if(!fin || !fout) { //논리연산자 ||(or) : 둘 다 false여야만 false값 반환
    cout << "File open error" << endl;
    exit(100);
  }
  while(readStu(fin, id, score1, score2, score3)) {
    calGrade(score1, score2, score3, avg, grade);
    writeStu(fout, id, avg, grade);
  }
  cout << "Finish" << endl;
  fin.close();
  fout.close();
  return 0;
}
